---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "search.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    component: "search"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: "search"
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        component: "search"
    spec:
      serviceAccountName: {{ template "search.fullname" . }}
      containers:
      {{- if not (or (.Capabilities.APIVersions.Has "operator.open-cluster-management.io/v1/MultiClusterHub") (.Capabilities.APIVersions.Has "operator.open-cluster-management.io/v1beta1/MultiClusterHub")) }}
      - name: collector
        image: "{{ .Values.global.imageOverrides.search_collector }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        {{- if .Values.userargs.containerArgs }}
        args:
          - '{{ .Values.userargs.containerArgs }}'
        {{- end }}
        env:
        - name: CLUSTER_NAME
          value: "{{ .Values.clusterName }}"
        - name: HUB_CONFIG
          value: /hubconfig/kubeconfig
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.userargs.rediscoverRate }}
        - name: REDISCOVER_RATE_MS
          value: "{{ .Values.userargs.rediscoverRate }}"
        {{- end }}
        {{- if .Values.userargs.heartBeat }}
        - name: HEARTBEAT_MS
          value: "{{ .Values.userargs.heartBeat }}"
        {{- end }}
        {{- if .Values.userargs.reportRate }}
        - name: REPORT_RATE_MS
          value: "{{ .Values.userargs.reportRate }}"
        {{- end }}
        {{- if .Values.global.proxyConfig.HTTP_PROXY }}
        - name: HTTP_PROXY
          value: {{ .Values.global.proxyConfig.HTTP_PROXY }}
        {{- end }}
        {{- if .Values.global.proxyConfig.HTTPS_PROXY }}
        - name: HTTPS_PROXY
          value: {{ .Values.global.proxyConfig.HTTPS_PROXY }}
        {{- end }}
        {{- if .Values.global.proxyConfig.NO_PROXY }}
        - name: NO_PROXY
          value: {{ .Values.global.proxyConfig.NO_PROXY }}
        {{- end }}
        resources:
          {{- if .Values.userargs.requestMemory }}
          requests:
            memory: {{ .Values.userargs.requestMemory }}
          {{- else }}
          requests:
            memory: 128Mi
          {{- end }}
          {{- if .Values.userargs.limitMemory }}
          limits:
            memory: {{ .Values.userargs.limitMemory }}
          {{- else }}
          limits:
            memory: 1024Mi
          {{- end }}
        livenessProbe: null
        readinessProbe: null
        volumeMounts:
        - name: hub-config
          mountPath: /hubconfig
      volumes:
      - name: hub-config
        secret:
          secretName: {{ .Values.hubKubeConfigSecret }}
      {{- end }}
      {{- if and .Values.global (hasKey .Values.global "nodeSelector") }}
      nodeSelector: {{ toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- if and .Values (hasKey .Values "tolerations") }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.global.imagePullSecret }}"
      {{- end }}
